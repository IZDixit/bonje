"""
Django settings for fuelapp project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from decouple import config, Csv
import os
import environ

# Initialize environment variables
env = environ.Env()
environ.Env.read_env() # Read the .env file

# Access the DJANGO_ENV variable
DJANGO_ENV = env('DJANGO_ENV', default='production') # Default to production if not set

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG', default=False, cast=bool)

# Preventing Cross-site Scripting (XSS) attacks (ID)
if DJANGO_ENV == 'development':
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True

# Redirect all non-HTTPS to HTTP. SSL redirect (ID)
if DJANGO_ENV == 'development':
    SECURE_SSL_REDIRECT = False
else:
    SECURE_SSL_REDIRECT = True



# Protect from man-in-the-middle attacks (ID)
# HTTP strict Transport security (HSTS)
SECURE_HSTS_SECONDS = 86400
SECURE_HSTS_PRELOAD = True
SECURE_HSTS_INCLUDE_SUBDOMAINS = True

# Prevent accidental sending of session or CSRF cookie to HTTP (ID)
# Cross-site request forgery (CSRF) protection
# We will need to set back to True for deployment.
if DJANGO_ENV == 'development':
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False


# Allowed hosts configuration
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='localhost', cast=Csv())

# Redis configuration for Defender (or any other Redis usage)
DEFENDER_REDIS_URL = config('DEFENDER_REDIS_URL', default='redis://localhost:6379/0')

# Debugging above
print(f'DJANGO_ENV: {DJANGO_ENV}')
print(f'SECURE_SSL_REDIRECT: {SECURE_SSL_REDIRECT}')
print(f'SECURE_BROWSER_XSS_FILTER: {SECURE_BROWSER_XSS_FILTER}')
print(f'SECURE_CONTENT_TYPE_NOSNIFF: {SECURE_CONTENT_TYPE_NOSNIFF}')
print(f'SESSION_COOKIE_SECURE: {SESSION_COOKIE_SECURE}')
print(f'CSRF_COOKIE_SECURE: {CSRF_COOKIE_SECURE}')



# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    'orders',

    'crispy_forms',

    'silk',

    'schema_graph',

    'defender',

    'django_extensions',

]

# I added this for the crispy forms (Imraan Dixit)
CRISPY_TEMPLATE_PACK = 'bootstrap4'
# I added silky middleware, this allows me to track performance. (ID)
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'silk.middleware.SilkyMiddleware',
    'defender.middleware.FailedLoginMiddleware',
]

ROOT_URLCONF = "fuelapp.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "fuelapp.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# We added this (Imraan Dixit)
STATICFILES_DIRS = [BASE_DIR/'static']

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
